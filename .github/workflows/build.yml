#################################################################################################
# MuleSoft CI/CD Pipeline - GitHub Actions Workflow
#################################################################################################
# Projeto   : mule-parent-bom
# Autor     : Leonel Dorneles Porto
# Email     : leoneldornelesporto@outlook.com.br
# Telefone  : +55 53 99180-4869
#################################################################################################
# Descrição :
#   - Pipeline de CI/CD para publicar o Parent POM e BOM no Anypoint Exchange
#   - Não realiza deploy em CloudHub (somente publish to Exchange).
#################################################################################################

name: Publish to Exchange

on:
  push:
    branches: 
      - dev
      - qa
      - prod
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      #########################################################################
      # 1. Checkout do repositório
      #########################################################################
      - name: 📥 Checkout do repositório completo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessário se quiser manipular branches

      #########################################################################
      # 2. Configurar JDK (versão que preferir: 8, 11, 17)
      #########################################################################
      - name: ☕ Setup JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 8

      #########################################################################
      # 3. (Opcional) Incrementar versão do POM raiz do repositório
      #    Se quiser manter a lógica de version bump.
      #########################################################################
      - name: 🔖 Incrementar versão do pom.xml (raiz) e propagar
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🚀 Início do incremento de versão a partir da branch atual"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

          ORIGIN_BRANCH=$GITHUB_REF_NAME
          echo "🌿 Branch de origem: $ORIGIN_BRANCH"
          
          TARGET_BRANCHES="dev qa prod main"

          git fetch origin $ORIGIN_BRANCH
          git checkout $ORIGIN_BRANCH || git checkout -b $ORIGIN_BRANCH origin/$ORIGIN_BRANCH
          git pull origin $ORIGIN_BRANCH

          # Caso você tenha um "pom.xml" no root do repo, 
          # senão pode pular este passo ou ajustar para parent-pom/pom.xml
          if [ -f pom.xml ]; then
            BASE_VERSION=$(grep -m 1 '<version>' pom.xml | sed -E 's/.*<version>(.*)<\/version>.*/\1/')
            echo "📌 Versão atual detectada (pom.xml raiz): $BASE_VERSION"

            IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE_VERSION"
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
            echo "🚀 Nova versão: $NEW_VERSION"

            sed -i "0,/<version>.*<\/version>/s//<version>${NEW_VERSION}<\/version>/" pom.xml
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add pom.xml
            git commit -m "🔖 Bump version to $NEW_VERSION [automated by CI/CD]"
            git push origin $ORIGIN_BRANCH

            for BRANCH in $TARGET_BRANCHES
            do
              if [ "$BRANCH" = "$ORIGIN_BRANCH" ]; then
                echo "⚠️ Ignorando branch de origem $BRANCH"
                continue
              fi

              git fetch origin $BRANCH
              git checkout $BRANCH || git checkout -b $BRANCH origin/$BRANCH
              git pull origin $BRANCH

              sed -i "0,/<version>.*<\/version>/s//<version>${NEW_VERSION}<\/version>/" pom.xml
              git add pom.xml
              git commit -m "🔖 Bump version to $NEW_VERSION [automated by CI/CD]"
              git push origin $BRANCH

              echo "✅ Atualização concluída na branch: $BRANCH"
            done
          else
            echo "⚠️ Nenhum pom.xml na raiz do repo. Pulando incremento de versão."
          fi

      #########################################################################
      # 4. Cache de dependências Maven
      #########################################################################
      - name: 📦 Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      #########################################################################
      # 5. Publicar POM do Parent no Anypoint Exchange
      #########################################################################
      - name: 🚀 Publicar Parent POM
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🌐 Publicando Parent POM no Anypoint Exchange"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          cd parent-pom
          mvn clean deploy --settings ../.maven/settings.xml \
            -DskipTests \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

      #########################################################################
      # 6. Publicar BOM no Anypoint Exchange
      #########################################################################
      - name: 🚀 Publicar BOM
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🌐 Publicando BOM no Anypoint Exchange"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          cd bom
          mvn clean deploy --settings ../.maven/settings.xml \
            -DskipTests \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

      #########################################################################
      # (Opcional) Se quiser remover completamente o Deploy em CloudHub,
      # basta não criar essa etapa:
      #
      # - name: ☁️ Deploy no CloudHub 2.0
      #   run: ...
      #
      #########################################################################

