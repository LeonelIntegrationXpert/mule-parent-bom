#################################################################################################
# 🚀 MuleSoft CI/CD Pipeline - GitHub Actions Workflow
#################################################################################################
# Projeto   : mule-parent-bom
# Autor     : Leonel Dorneles Porto
# Email     : leoneldornelesporto@outlook.com.br
# Telefone  : +55 53 99180-4869
#################################################################################################
# Descrição :
#   - Publica o Parent POM e BOM no Anypoint Exchange
#################################################################################################

name: 🚀 Publish to Anypoint Exchange

on:
  push:
    branches:
      - dev
      - qa
      - prod
      - main

permissions:
  contents: write

jobs:
  publish-exchange:
    runs-on: ubuntu-latest

    steps:
      #########################################################################
      # 1. Checkout do repositório
      #########################################################################
      - name: 📥 Checkout do repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      #########################################################################
      # 2. Setup JDK 8 (Zulu) + Maven Cache
      #########################################################################
      - name: ☕ Setup JDK 8 com cache Maven
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 8
          cache: maven

      #########################################################################
      # 3. Atualiza a branch antes do bump de versão
      #########################################################################
      - name: 🔄 Atualiza a branch antes de incrementar a versão
        run: |
          git fetch origin
          git checkout $GITHUB_REF_NAME
          git pull origin $GITHUB_REF_NAME --rebase

      #########################################################################
      # 4. Incremento de Versão BOM + Parent POM (com atualização da referência)
      #########################################################################
      - name: 🔖 Incrementar Versão BOM + Parent POM
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🔖 Incrementando versões BOM e Parent POM (controle explícito)"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

          increment_version_number() {
            local base_version="$1"

            # Limpa espaços e quebras de linha
            base_version=$(echo "$base_version" | tr -d '[:space:]')

            IFS='.' read -r MAJOR MINOR PATCH <<< "$base_version"
            PATCH=$((PATCH + 1))

            if [ "$PATCH" -gt 99 ]; then
              PATCH=0
              MINOR=$((MINOR + 1))
            fi

            if [ "$MINOR" -gt 99 ]; then
              MINOR=0
              MAJOR=$((MAJOR + 1))
            fi

            echo "${MAJOR}.${MINOR}.${PATCH}"
          }

          #####################################################################
          # Incrementa BOM
          #####################################################################
          BOM_POM="bom/pom.xml"
          echo "📦 Incrementando versão do BOM"

          BOM_CURRENT_VERSION=$(grep -m 1 '<version>' "$BOM_POM" | sed -E 's/.*<version>(.*)<\/version>.*/\1/')
          echo "🔎 Versão atual do BOM: $BOM_CURRENT_VERSION"

          BOM_NEW_VERSION=$(increment_version_number "$BOM_CURRENT_VERSION")
          echo "🚀 Nova versão do BOM: $BOM_NEW_VERSION"

          # Atualiza <version> no BOM (<project>/<version>)
          sed -i "0,/<version>.*<\/version>/s//<version>${BOM_NEW_VERSION}<\/version>/" "$BOM_POM"

          #####################################################################
          # Incrementa Parent POM e atualiza referência ao BOM
          #####################################################################
          PARENT_POM="parent-pom/pom.xml"
          echo "📦 Incrementando versão do Parent POM e atualizando referência do BOM"

          # Extrai a versão atual do próprio Parent POM (<project>/<version>)
          PARENT_CURRENT_VERSION=$(xmllint --xpath "string(/project/version)" "$PARENT_POM")
          echo "🔎 Versão atual do Parent POM: $PARENT_CURRENT_VERSION"

          PARENT_NEW_VERSION=$(increment_version_number "$PARENT_CURRENT_VERSION")
          echo "🚀 Nova versão do Parent POM: $PARENT_NEW_VERSION"

          # Atualiza <project>/<version> no Parent POM (só a primeira ocorrência fora do <parent>)
          sed -i "0,/<version>.*<\/version>/s//<version>${PARENT_NEW_VERSION}<\/version>/" "$PARENT_POM"

          # Atualiza a versão do BOM dentro da tag <parent>
          sed -i "/<parent>/,/<\/parent>/ s/<version>.*<\/version>/<version>${BOM_NEW_VERSION}<\/version>/" "$PARENT_POM"

          #####################################################################
          # Commit e Push
          #####################################################################
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add "$BOM_POM" "$PARENT_POM"
          git commit -m "🔖 Bump BOM to ${BOM_NEW_VERSION} and Parent POM to ${PARENT_NEW_VERSION} [CI/CD auto]"

          echo "🚀 Push das versões atualizadas..."
          git pull origin $GITHUB_REF_NAME --rebase
          git push origin $GITHUB_REF_NAME

      #########################################################################
      # 5. Publica BOM no Anypoint Exchange
      #########################################################################
      - name: 📦 Publicar BOM no Exchange
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "📦 Publicando BOM no Anypoint Exchange"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          cd bom
          mvn clean deploy --settings ../.maven/settings.xml \
            -DskipTests \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"
        timeout-minutes: 10

      #########################################################################
      # 6. Publica Parent POM no Anypoint Exchange
      #########################################################################
      - name: 📦 Publicar Parent POM no Exchange
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "🚀 Publicando Parent POM no Anypoint Exchange"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          cd parent-pom
          mvn clean deploy --settings ../.maven/settings.xml \
            -DskipTests \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"
        timeout-minutes: 10

      #########################################################################
      # 7. Upload Maven logs se falhar
      #########################################################################
      - name: 📤 Upload Maven logs (apenas se falhar)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: maven-logs
          path: "**/target/*.log"
