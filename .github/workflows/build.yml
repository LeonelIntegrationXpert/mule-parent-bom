#################################################################################################
# ðŸš€ MuleSoft CI/CD Pipeline - GitHub Actions Workflow
#################################################################################################
# Projeto   : mule-parent-bom
# Autor     : Leonel Dorneles Porto
# Email     : leoneldornelesporto@outlook.com.br
# Telefone  : +55 53 99180-4869
#################################################################################################
# DescriÃ§Ã£o :
#   - Publica o Parent POM e BOM no Anypoint Exchange
#################################################################################################

name: ðŸš€ Publish to Anypoint Exchange

on:
  push:
    branches:
      - dev
      - qa
      - prod
      - main

permissions:
  contents: write

jobs:
  publish-exchange:
    runs-on: ubuntu-latest

    steps:
      #########################################################################
      # 1. Checkout do repositÃ³rio
      #########################################################################
      - name: ðŸ“¥ Checkout do repositÃ³rio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      #########################################################################
      # 2. Setup JDK 8 (Zulu) + Maven Cache
      #########################################################################
      - name: â˜• Setup JDK 8 com cache Maven
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "8"
          cache: maven

      #########################################################################
      # 3. Atualiza a branch local antes de qualquer commit
      #########################################################################
      - name: ðŸ”„ Atualiza a branch local
        run: |
          git fetch origin
          git checkout $GITHUB_REF_NAME
          git pull origin $GITHUB_REF_NAME --rebase

      #########################################################################
      # 4. Commit 1: Incrementar versÃ£o do BOM
      #########################################################################
      - name: ðŸ”– Incrementar versÃ£o do BOM (1Âº Commit)
        run: |
          BOM_POM="bom/pom.xml"
          BOM_CURRENT_VERSION=$(grep -m 1 '<version>' "$BOM_POM" | sed -E 's/.*<version>(.*)<\/version>.*/\1/')

          IFS='.' read -r MAJOR MINOR PATCH <<< "$BOM_CURRENT_VERSION"
          PATCH=$((PATCH + 1))
          BOM_NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"

          echo "BOM_NEW_VERSION=${BOM_NEW_VERSION}" >> $GITHUB_ENV

          # Atualiza BOM
          sed -i "0,/<version>.*<\/version>/s//<version>${BOM_NEW_VERSION}<\/version>/" "$BOM_POM"

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add "$BOM_POM"
          git commit -m "ðŸ”– Bump BOM version to ${BOM_NEW_VERSION} [CI/CD auto]"

      #########################################################################
      # 5. Commit 2: Incrementar Parent POM (project.version) e referÃªncia <parent>
      #########################################################################
      - name: ðŸ”– Incrementar Parent POM (2Âº Commit)
        run: |
          source $GITHUB_ENV
          PARENT_POM="parent-pom/pom.xml"

          # 5a) Atualiza a 1Âª <version> FORA do <parent> block -> project.version
          #    Range invertida: /<parent>/,/<\\/parent>/! => ignore o bloco parent
          sed -i '/<parent>/,/<\\/parent>/{!b}; /<version>/{s//<version>'"$BOM_NEW_VERSION"'<\\/version>/;b};' "$PARENT_POM"

          # 5b) Atualiza a <version> dentro de <parent> -> BOM reference
          sed -i '/<parent>/,/<\\/parent>/ s/<version>.*<\\/version>/<version>'"$BOM_NEW_VERSION"'<\\/version>/' "$PARENT_POM"

          git add "$PARENT_POM"
          git commit -m "ðŸ”– Sync Parent POM (project.version & BOM reference) => $BOM_NEW_VERSION [CI/CD auto]"

          git pull origin $GITHUB_REF_NAME --rebase
          git push origin $GITHUB_REF_NAME

      #########################################################################
      # 6. Publicar BOM no Exchange
      #########################################################################
      - name: ðŸ“¦ Publicar BOM no Exchange
        run: |
          cd bom
          mvn clean deploy --settings ../.maven/settings.xml \
            -DskipTests \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"
        timeout-minutes: 10

      #########################################################################
      # 7. Publicar Parent POM no Exchange
      #########################################################################
      - name: ðŸ“¦ Publicar Parent POM no Exchange
        run: |
          cd parent-pom
          mvn clean deploy --settings ../.maven/settings.xml \
            -DskipTests \
            -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
            -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"
        timeout-minutes: 10

      #########################################################################
      # 8. Upload Maven logs (se falhar)
      #########################################################################
      - name: ðŸ“¤ Upload Maven logs (se falhar)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: maven-logs
          path: "**/target/*.log"
